Salesforce information

Lightning and Classic: Different layouts / Versions
Cases are the main thing with Salesforce. Clients go through cases to perform their jobs

--------------------------------------------------------------------------------------------------------

** Case management
Organizing customer cases in one place, and making sure it goes to the right person
Different automation tools
	Queues						Creates lists that allows agents to jump in
	Assignment rules			Auto assign cases to specific agents
	Escalation rules			Auto escalates the cases to the right people
	Auto response rules			Send personalized emails responses based on each case details
These can be added under Service setup

--------------------------------------------------------------------------------------------------------

** Digital Engagement
Email and web form channels (Email service
Collecting cases from customers either through emails for webforms

Other ways of engagement
Call center
Self-service help center
Social Customer service (Twitter, etc.)
Embedded chat services
Mobile support
Messaging (SMS text and Messagner)
On site field service

--------------------------------------------------------------------------------------------------------

** Lightning Experience
Lightning Knowledge
Transforming notes into articles that customers can reference
"Helping them answer their own questions"
Allow the support agent to create a knowledge base on the website or other knowledge bases
Allows them to setup employee onboarding (Their own pace of learning)

This is assoicated with cases that allow agents to access them

--------------------------------------------------------------------------------------------------------

** Lightning Web Components

--------------------------------------------------------------------------------------------------------

** Flows
Automation can be either interactive or behind the scene

Interactive --
Screen Flows					Create interactions with clients
Autolaunched Flows				Create automations that run when buttons are clicked
Approval Processes				Series of steps with assigned appprovers
Lightning Components			HTML and JavaScript to build interactive components to embed
Visualforce Pages				HTML and Apex code

Behind the Scenes --			
Record-Triggered Flows			Create automation that runs when a record is created/edited/deleted
Schedule-Triggered Flows		Create automations that runs at a time and frequency
Platform Event-Triggered Flows	Create automations that run when a platform event message is received
Apex							Apex code to write reusable blocks of automation

Flow buzzwords
Salesforce Flow		Blanket term for everthing in Salesforce that allows you to create/manage/run automation with clicks not code
Flow				Automation configuration saved in Salesforce with the structure of a flowchart
Flow Builder		Primary tool for creating flows
Flownatic			Someone who likes creating flows

Canvas is the working area where you place nodes
Flow manager, lists of things you used within the flow
Declarative just means that it doesnâ€™t require software programming skills. Flow Builder is a declarative tool.

* Look for declarative options before looking for coding solutions first

Screen flow
Contains a toolbox that contains all the nodes
Canvas which is the working area to add the nodes
Button bar that provides information about the flow

Default is autolayout out and contains extra features compared to free-form

Flow contains three nodes: 
Elements		Nodes that make things happen on the canvas
	Interaction		Interacts with users
	Data			Interacts with data
	Logic			INteracts with the flow itself
	

Connectors		Defines the path the flow takes
Resoruces		Does not appear on the canvas, but are referenced by flow elements

* Best to plan the business process before you try to automate it. As it allows you to idenify potential problems

bools are defined using {!GlobalConstant.True} or {!GlobalConstant.False}
If you use true/false, flow will think it's a string

API name is the name of the variable
!! Add a decription to give context to the variable
collection == array (Ordered List)

No defined date format used in salesforce - DTO

Formula allows you to format and use logic on your data
Template allows you to structure a larger block of text

--------------------------------------------------------------------------------------------------------

** Flow resources

--------------------------------------------------------------------------------------------------------

resources are placeholders
Ex. in a email field:
	Hi, {!User.FirstName}.
{!User.FirstName} was the placeholder, so when the email is sent it displays the user
actual name

Constant represent a fix value
Choice, Picklet Choice Set, or Record Choice Set represent an option in a screen component
	Choices consists of two different components: label and a value
Formula represents a calculated value
Text Template represents formatted text
Variable represents a value that can change throughout the flow

Enable the "Allow multiple values" checkbox to allow an array like structure for the variable

"Available for input" Allows the variable to take values from an outside source
"Available for output" Allows for variables to be exported out of the flow

Screen element:
Screen components pane: Displays all the screen components
Screen canvas: The canvas is where you build the screen
Properties Pane: Allows you to modify properties of components and the screen

"Rules determine wheter a particular action should be taken or not"
* Always use the global constants for true and false.
* Use the default outcome as the last answer to your decision's question
Group all keep and delete into two different buckets, then dump all at once. (Save time)

Use flow to automatically do things on behalf of the user:
including making updates to your data, sending emails, sending information to an external system

Action is an interaction element that cna do a specific action defined. Example is posting to Chatter.
More examples:
	Post to Chatter.
	Send Email.
	Submit For Approval.
	Activate or Deactivate a Permission Set.
	Global or object-specific actions provided by Salesforce.
	
- Adding tests for flows
Before creating tests, you should create a test plan.
Consider things like:
	When you expect actions to occur
	When you expect actions to not occur
	How formulas should resolve
	
Debug gives you additonal details and allows you to input data into variables
Each time you run the application, a flow interview starts. A flow interview is an instance of a flow.

- Enable User Access For Your Flow
Activate the flow using the activate button within the flow
Then you need to give permission to the users
	Identify the users who will run the flow.
	Create a permission set that includes the Run Flows permission.
	Assign the permission set to the users you identified.
	
Distributing options
	Screen Flow	
		Flow actions
		Lightning pages
		Lightning community pages
		Custom buttons or custom links
		Web tabs
		Direct flow URLs
		Snap-in deployments
	Autolaunched Flow	
		Custom buttons or custom links
		Web tabs
		
--------------------------------------------------------------------------------------------------------

** Service cloud for Agents

--------------------------------------------------------------------------------------------------------
	
Service console is a help-desk application that enables agents to do two things:
	Create and manage customer cases from multiple digital channels
	Boost productivity and simplify processes

Admins can create different consoles for different types of support

Either they can work off an un-assigned format or by Omni-channel which assigns them cases

These are the benefits of the service
Productivity workspaces - Work with multiple records across tabs / subtabs
Streamlined case management - Resolve cases faster by quickly spotting a variety of support processes and service levels
Automatic process and routing - Receive case assignments based on your skills, caseload, and access to specific channels.
Virtual collaboration - Post internal messages and collaborate with teammates on Slack no matter where they are. 
	Create Slack channels outside of cases to track information for specific projects and to reduce email and distractions
	
Console is available through the web and mobile

--------------------------------------------------------------------------------------------------------

** Service Metrics

--------------------------------------------------------------------------------------------------------
- Defining Metrics

Two types of service metrics: Internal and External
	Track two things
	Effectiveness of your agents, and the satisfaction of your customers
Average Handle Time (AHT)
Tracking customer satisfaction (CSAT) and net promoter score (NPS) are great indicators of overall customer happiness
What are the metric goals and what is important to them

- Create a Service Metrics Strategy
Should indicate the health of their customer service operations
Review current metric strategy, have a mix of internal and external, then finalize

- Analyze Your Service Data in Salesforce
Offers a varity of features for metrics
	Reports
	Dashboards
	AppExchange
	Einstein Analytics
	Einstein Discovery
	Service Analytics App

Create a report based on case data -> Then can create a dashboard for it

--------------------------------------------------------------------------------------------------------

** Building Lightning Web Components

--------------------------------------------------------------------------------------------------------
LWC comes bundled with ESLint by default
Deploying and configure the LWC
	Push metadata using: sfdx force:source:push
	Open the Org: sfdx force:org:open
	
Introduction to LWC
	select, video, input are web components
	template tag is a fundamental building block for a component (Root node)
	Uses classes for the JS file
	Salesforce compiles and takes cares of the boilerplate component construction
		You only need to worry about deploying the files and the metadata to the org
	Aura components came first, now they're trying to migrate users to LWC
	Component Library: https://developer.salesforce.com/docs/component-library/overview/components?_ga=2.107680390.569547169.1675694401-1783804688.1675694401
	Scratch Orgs are disosable Salesforce Orgs for development/testing
		Dev Hub is a feature used to manage these environments
	Component needs a folder and files that share the name
	Default namespace is c, so all LWC have a namespace that's separated from the folder named by a hyphen - ex. app -> (c-app)
	camelCasing for file naming
	kebab-case in the markup
		In markup, to reference a component with the folder name myComponent, use <c-my-component>
	The identifiers in the curly braces {} are bound to the fields of the same name in the corresponding JavaScript class.
	USe if:false and if:true conditional directives within your template to determine which visual elements are rendered.